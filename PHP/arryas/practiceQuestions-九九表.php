<?php
    $kuku = [];

    // 答えのみの表
    for ($i = 1; $i <= 9; $i++) {
        for ($j = 1; $j <= 9; $j++) {
            $kuku[$i][$j] = $i * $j;
            echo $kuku[$i][$j] . "\t";
        }
        echo PHP_EOL;
    };
    // ※　\t はタブ
    
    // 計算式と答えの表
    for ($i = 1; $i <= 9; $i++) {
        for ($j =1; $j <= 9; $j++) {
            echo "{$i} × {$j} = " . ($i*$j) . "\t";
        }
        echo PHP_EOL;
    };
    

    // このコードでやっていること

    /*
    1．九九の値を「2次元配列」に入れる
        ・$kuku は2次元配列（配列の中に配列）
        ・$i は段（1の段、2の段…）→ 縦方向
        ・$j は掛ける数（1～9）→ 横方向
        ・$kuku[2][3]は、2×3=6 が入る
    
    この部分は　↓

    for ($i = 1; $i <= 9; $i++) {
        for ($j = 1; $j <= 9; $j++) {
            $kuku[$i][$j] = $i * $j;
    
    わかりやすく記述すると以下のような配列が作らている　↓
    
    $kuku = [
        1 => [1 => 1, 2 => 2, 3 => 3, ...],
        2 => [1 => 2, 2 => 4, 3 => 6, ...],
        3 => [1 => 3, 2 => 6, 3 => 9, ...],
        ...
        9 => [1 => 9, 2 => 18, 3 => 27, ...]
    ];


    2．配列の中身を出力
        ・外側のループ $i で段を切り替え
        ・内側のループ $j で横に並ぶ掛け算結果を出力する


    3．なぜ $kuku[$i][$j] になるのか

        $kuku[2][3]

        これは、$kuku[2]の段を取り出し、
        その中の、[3]番目の値を見ている

        という意味

        つまり、
        [2]の段の[3]番目 → 2 × 3 = 6
        ということ


    まとめ
        ・$kuku[$i][$j]
            [$iの段][$j番目]＝掛け算の答え
        ・2重ループ
            1～9の掛け算をすべて順に処理するため
        ・出力ループ
            表形式になるように行・列で表示している
    */
    
    